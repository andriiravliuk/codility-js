function solution(A) {
    let N = A.length
    if (N < 3) return 1
    let fib = [0, 1]
    for (let i=2; ; i++) {
        fib[i] = fib[i - 1] + fib[i - 2]
        if (fib[i] > N) break
    }
    let steps = new Array(N).fill(0)
    let i = 2, base = -1, res = -1
    while (i < fib.length && base < N) {
        if (steps[base] == 0) {
            base++
            continue
        }
        let nextPos = base + fib[i]
        if (nextPos > N) {
            base++
            i = 2
            continue
        }
        if (nextPos == N) {
            if (base == -1) return 1
            res = res < 0 ? steps[base] + 1 : Math.min(res, steps[base] + 1)
        } else {
            if (A[nextPos] == 1) {
                let newStep = base == -1 ? 1 : steps[base] + 1
                steps[nextPos] = steps[nextPos] == 0
                    ? newStep
                    : Math.min(steps[nextPos], newStep)
            }
        }
        i++
    }
    return res
}
